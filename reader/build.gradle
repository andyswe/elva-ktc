plugins {
    id "org.jetbrains.kotlin.jvm" version "1.4.0"
}

apply plugin: 'idea'
apply plugin: 'java'

dependencies {
    compile group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.0'
    compile "com.fasterxml.jackson.core:jackson-annotations"
    compile 'org.apache.httpcomponents:httpclient:4.5.13'
    compile group: 'org.dom4j', name: 'dom4j', version: '2.1.3'
    compile 'jaxen:jaxen:1.2.0'
    compile project(':model')

    compile group: 'org.jdbi', name: 'jdbi3-core', version: '3.23.0'
    compile group: 'org.jdbi', name: 'jdbi3-sqlobject', version: '3.23.0'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.24'
    compile 'org.slf4j:slf4j-log4j12:1.7.32'

    testCompile group: 'com.h2database', name: 'h2', version: '1.4.200'


    testCompile 'junit:junit:4.13'
    testImplementation 'org.hamcrest:hamcrest:2.2'
}

test {
    useJUnit()
    maxHeapSize = '1G'
}

jar {
    manifest {
        attributes "Main-Class": "io.github.andyswe.elva.data.reader.Application"
    }
}
task copyToLib(type: Copy) {
    into "$buildDir/output/libRuntime"
    from configurations.runtime
}
build.finalizedBy(copyToLib)

test {
    doFirst {
        project.rootDir.toPath().resolve('ktc_settings.env').toFile().readLines().each() {
            def (key, value) = it.tokenize('=')
            environment key, value
        }
    }
}